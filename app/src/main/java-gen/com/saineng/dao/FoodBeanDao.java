package com.saineng.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import greendao.FoodBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table FOOD_BEAN.
*/
public class FoodBeanDao extends AbstractDao<FoodBean, Long> {

    public static final String TABLENAME = "FOOD_BEAN";

    /**
     * Properties of entity FoodBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property F_order_id = new Property(1, String.class, "f_order_id", false, "F_ORDER_ID");
        public final static Property F_goods_name = new Property(2, String.class, "f_goods_name", false, "F_GOODS_NAME");
        public final static Property F_goods_num = new Property(3, String.class, "f_goods_num", false, "F_GOODS_NUM");
        public final static Property F_user_name = new Property(4, String.class, "f_user_name", false, "F_USER_NAME");
        public final static Property F_user_id = new Property(5, String.class, "f_user_id", false, "F_USER_ID");
        public final static Property F_user_phone = new Property(6, String.class, "f_user_phone", false, "F_USER_PHONE");
        public final static Property F_valid_start = new Property(7, String.class, "f_valid_start", false, "F_VALID_START");
        public final static Property F_valid_end = new Property(8, String.class, "f_valid_end", false, "F_VALID_END");
        public final static Property Group_name = new Property(9, String.class, "group_name", false, "GROUP_NAME");
        public final static Property User_type = new Property(10, String.class, "user_type", false, "USER_TYPE");
        public final static Property Dish_date = new Property(11, String.class, "dish_date", false, "DISH_DATE");
    };


    public FoodBeanDao(DaoConfig config) {
        super(config);
    }
    
    public FoodBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'FOOD_BEAN' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'F_ORDER_ID' TEXT," + // 1: f_order_id
                "'F_GOODS_NAME' TEXT," + // 2: f_goods_name
                "'F_GOODS_NUM' TEXT," + // 3: f_goods_num
                "'F_USER_NAME' TEXT," + // 4: f_user_name
                "'F_USER_ID' TEXT," + // 5: f_user_id
                "'F_USER_PHONE' TEXT," + // 6: f_user_phone
                "'F_VALID_START' TEXT," + // 7: f_valid_start
                "'F_VALID_END' TEXT," + // 8: f_valid_end
                "'GROUP_NAME' TEXT," + // 9: group_name
                "'USER_TYPE' TEXT," + // 10: user_type
                "'DISH_DATE' TEXT);"); // 11: dish_date
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'FOOD_BEAN'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, FoodBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String f_order_id = entity.getF_order_id();
        if (f_order_id != null) {
            stmt.bindString(2, f_order_id);
        }
 
        String f_goods_name = entity.getF_goods_name();
        if (f_goods_name != null) {
            stmt.bindString(3, f_goods_name);
        }
 
        String f_goods_num = entity.getF_goods_num();
        if (f_goods_num != null) {
            stmt.bindString(4, f_goods_num);
        }
 
        String f_user_name = entity.getF_user_name();
        if (f_user_name != null) {
            stmt.bindString(5, f_user_name);
        }
 
        String f_user_id = entity.getF_user_id();
        if (f_user_id != null) {
            stmt.bindString(6, f_user_id);
        }
 
        String f_user_phone = entity.getF_user_phone();
        if (f_user_phone != null) {
            stmt.bindString(7, f_user_phone);
        }
 
        String f_valid_start = entity.getF_valid_start();
        if (f_valid_start != null) {
            stmt.bindString(8, f_valid_start);
        }
 
        String f_valid_end = entity.getF_valid_end();
        if (f_valid_end != null) {
            stmt.bindString(9, f_valid_end);
        }
 
        String group_name = entity.getGroup_name();
        if (group_name != null) {
            stmt.bindString(10, group_name);
        }
 
        String user_type = entity.getUser_type();
        if (user_type != null) {
            stmt.bindString(11, user_type);
        }
 
        String dish_date = entity.getDish_date();
        if (dish_date != null) {
            stmt.bindString(12, dish_date);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public FoodBean readEntity(Cursor cursor, int offset) {
        FoodBean entity = new FoodBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // f_order_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // f_goods_name
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // f_goods_num
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // f_user_name
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // f_user_id
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // f_user_phone
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // f_valid_start
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // f_valid_end
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // group_name
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // user_type
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11) // dish_date
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, FoodBean entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setF_order_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setF_goods_name(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setF_goods_num(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setF_user_name(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setF_user_id(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setF_user_phone(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setF_valid_start(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setF_valid_end(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setGroup_name(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setUser_type(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setDish_date(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(FoodBean entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(FoodBean entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
